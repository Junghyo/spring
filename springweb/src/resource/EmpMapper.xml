<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!-- namespace: mapper별로 구분자 각 sql별로 id값이 있는데 공통적인 부분을 선언 
	 id : 패키지명.인터페이스명.메서드명 => DAO와 연결
	 해당 sql을 통해서 DAO에서 넘겨준 데이터를 조건(parameterType)으로 처리할 뿐 아니라, 
	 해당 id에 매핑되는 DAO에 실제 객체(ArrayList<VO>)로 넘긴다.
-->
<mapper namespace="spring.c01_database.repository.A01_EmpRep">
	<!-- 다수의 결과물 객체를 선언 : resultMap 
		 단위 객체의 type은 mybatis.Spring.xml에서 선언한 alias의 이름인 emp
		 ex) ArrayList<Emp> 이름(id)은 emp로 선언.
		 단일 객체를 return할 때는? resultType="emp"
	-->
	<resultMap type="emp" id="empMap"/>
	<!-- 외부에서 VO객체로 데이터를 넘겨받을 때, DAO단의 parameter : empList(Emp sch)==>parameterType="emp" 
		 #{ename} ==> emp.getEname()
	-->
	<!-- 	parameterType="emp"
			ex) public Emp getEmp(Emp e); 만일에 메서드가 입력값이 없으면 선언할 필요가 없다. -->
	<select id="emplist" resultMap="empMap" parameterType="emp">
		SELECT * FROM EMP WHERE ENAME LIKE '%'||#{ename}||'%'
	</select>
	
	<!-- 
		id="emplist" ==> DAO단에 어떤 메서드와 연결되어 해당 DAO에 데이터 넘길지를 선언
		resultMap="empMap"은 ArrayList<Emp> 형태로 데이터를 넘겨주겠다는 선언
		ex) public Emp getEmp();
			resultType="emp"
		
		ex) public void insertEmp()
		resultMap, resultType이 필요없다
		
		parameterType="emp"
			ex) public Emp getEmp(Emp e); 만일에 메서드가 입력값이 없으면 선언할 필요가 없다.
	 -->
	 <select id="empInfo" resultType="emp" parameterType="int">
	 	SELECT * FROM EMP WHERE EMPNO=#{empno}
	 </select>
	 
	 <update id="empUpdate" parameterType="emp">
	 	UPDATE EMP SET ENAME=#{ename},
	 					JOB=#{job},
	 					MGR=#{mgr},
	 					SAL=#{sal},
	 					COMM=#{comm},
	 					DEPTNO=#{deptno}  
	 					WHERE EMPNO=#{empno}
	 </update>
	 <!-- 검색처리. ename과 job이 있을 때에 해당 데이터가 정확히 있을 경우에만 검색 처리 -->	 
	 <select id="empList02" resultMap="empMap" parameterType="emp">
	 	SELECT * FROM EMP WHERE 1=1
	 	<if test="ename!=null and ename!='' ">
	 		AND ENAME=#{ename}
	 	</if>
	 	<if test="job!=null and job!='' ">
	 		AND JOB=#{job}
	 	</if>
	 </select>
	 <select id="empList03" resultMap="empMap" parameterType="emp">
	 	SELECT * FROM EMP WHERE
	 	<choose>
	 		<when test="sal>5000">AND DEPTNO=10</when>
	 		<when test="sal>4000">AND DEPTNO=10</when>
	 		<when test="sal>1000">AND DEPTNO=10</when>
	 		<otherwise>AND DEPTNO=40</otherwise>
	 	</choose>
	 </select>
	 <select id="empMultiList" resultMap="empMap" parameterType="empmulti">
	 	SELECT * FROM EMP WHERE 1=1
	 	<if test="ename!=null and ename!='' ">
	 		AND ENAME LIKE '%'||#{ename}||'%'
	 	</if> 
	 	<if test="job!=null and job!='' ">
	 		AND JOB LIKE '%'||#{job}||'%'
	 	</if>
	 	<if test="deptnos!=null">
	 		AND DEPTNO IN
	 		<foreach collection="deptnos" item="ckdeptno" open="(" close=")" separator=",">
	 			#{ckdeptno}
	 		</foreach>
	 	</if> 	 	
	 </select>
	 <select id="empMultiList2" resultMap="empMap" parameterType="empmulti2">
	 	SELECT * FROM EMP WHERE 1=1
	 	<if test="ename!=null and ename!='' ">
	 		AND ENAME LIKE '%'||#{ename}||'%'
	 	</if>
	 	<if test="jobs!=null">
	 		AND JOB IN
	 		<foreach collection="jobs" item="ckjob" open="(" close=")" separator=",">
	 			#{ckjob}
	 		</foreach>
	 	</if>
	 	<if test="deptnos!=null">
	 		AND DEPTNO IN
	 		<foreach collection="deptnos" item="ckdeptno" open="(" close=")" separator=",">
	 			#{ckdeptno}
	 		</foreach>
	 	</if>
	 </select>
</mapper>	